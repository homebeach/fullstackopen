[{"/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/index.js":"1","/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/App.js":"2","/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/PersonForm.js":"3","/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/Filter.js":"4","/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/Numbers.js":"5","/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/services/notes.js":"6"},{"size":160,"mtime":1683291744730,"results":"7","hashOfConfig":"8"},{"size":2737,"mtime":1684249271640,"results":"9","hashOfConfig":"8"},{"size":1026,"mtime":1684250547480,"results":"10","hashOfConfig":"8"},{"size":561,"mtime":1684249193740,"results":"11","hashOfConfig":"8"},{"size":511,"mtime":1684248956440,"results":"12","hashOfConfig":"8"},{"size":439,"mtime":1684264656130,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e82gz3",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/index.js",[],[],"/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/App.js",["33"],[],"import React, { useState, useEffect } from 'react';\nimport PersonForm from './PersonForm';\nimport Numbers from './Numbers';\nimport Filter from './Filter';\nimport noteService from './services/notes'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [note, setNote] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [filteredPersons, setFilteredPersons] = useState(persons);\n\n  const fetchData = () => {\n    noteService\n      .getAll()\n      .then(response => {\n        setPersons(response.data);\n        setFilteredPersons(response.data);\n      })\n  };\n  \n  useEffect(() => {\n    fetchData();\n  }, []);\n\n\n  function displayNoteWithTimeout(message) {\n    setNote(<div className=\"note\">{message}</div>);\n    setTimeout(() => setNote(''), 5000);\n  }\n\n  function displayErrorWithTimeout(message) {\n    setError(<div className=\"error\">{message}</div>);\n    setTimeout(() => setError(''), 5000);\n    fetchData();\n  }\n\n  const addPerson = (person) => {\n\n    const existingPerson = isNameAlreadyExists(person.content);\n\n    if (existingPerson) {\n\n      if (window.confirm(`${existingPerson.content} is already added to phonebook, replace the old phone number?`)) {        \n        noteService\n        .update(existingPerson.id, person)\n        .then(response => {\n          fetchData();\n          displayNoteWithTimeout(`${person.content} number was changed.`);\n        })\n        .catch(error => {\n          displayErrorWithTimeout(`${person.content} was already deleted from server`)\n        })\n      }\n\n    } else {\n      const newPersons = [...persons, person];\n      noteService\n      .create(person)\n      .then(response => {\n        fetchData();\n        displayNoteWithTimeout(`${person.content} succesfully added to phonebook.`);\n      })\n    }\n  };\n\n  const isNameAlreadyExists = (content) => {\n    return persons.find((person) => person.content === content);\n  };\n\n  const handleDeleteButtonClick = (event, id, name) => {\n    event.preventDefault(); // Prevents the form submission and page reload\n\n    if (window.confirm(`Do you really want to delete '${name}'?`)) {\n      noteService\n      .remove(id)\n      .then(response => {\n        noteService.getAll().then(updatedPersons => {\n          fetchData();\n          displayNoteWithTimeout(`${name} was deleted.`);\n        });\n      });\n    }\n  };\n\n  return (\n    <div>\n      {error}\n      {note} \n      <h2>Phonebook</h2>\n      <Filter persons={persons} setFilteredPersons={setFilteredPersons} />\n      <PersonForm addPerson={addPerson} isNameAlreadyExists={isNameAlreadyExists} />\n      <Numbers filteredPersons={filteredPersons} handleDeleteButtonClick={handleDeleteButtonClick}/> \n    </div>\n  );\n};\n\nexport default App;","/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/PersonForm.js",[],[],"/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/Filter.js",[],[],"/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/Numbers.js",[],[],"/Volumes/Storage/fullstackopen/osa3/3.11-frontend/src/services/notes.js",["34"],[],{"ruleId":"35","severity":1,"message":"36","line":58,"column":13,"nodeType":"37","messageId":"38","endLine":58,"endColumn":23},{"ruleId":"39","severity":1,"message":"40","line":20,"column":1,"nodeType":"41","endLine":25,"endColumn":2},"no-unused-vars","'newPersons' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]